package algs

import (
	"sort"
)

/*
 * Insertion 插入排序
 * 对于0到N-1之间每一个i,将a[i]与a[0]到a[i-1]中比它小的所有元素依次有序的交换。
 * 在索引i由左向右变化的过程中，它左侧的元素总是有序的，所以当i到达数组的右端时排序就完成了。
 *
 * 插入排序取决于输入元素的顺序，对于一个很大且其中的元素已经有序的数组进行排序比随机顺序的数组快得多，当倒置的元素数量很少时，
 * 插入排序可能比任何其他排序算法都要快。
 * 插入排序对于部分有序的数组很有效:
 * 1 数组中每个元素距离它的最终位置都不远
 * 2 一个有序的数组拼接一个小数组
 * 3 数组中只有几个元素的位置不正确
 */
func Insertion(data sort.Interface) {
	N := data.Len()

	for i := 1; i < N; i++ {
		for j := i; j > 0 && data.Less(j, j-1); j-- {
			data.Swap(j, j-1)
		}
	}
}
